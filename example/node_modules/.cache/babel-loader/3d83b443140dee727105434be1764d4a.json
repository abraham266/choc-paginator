{"ast":null,"code":"import _objectSpread from \"/var/www/html/Sites/choc-paginator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nimport { useColorModeValue, chakra, Flex } from '@chakra-ui/react';\nconst PaginationContext = React.createContext({\n  current: null,\n  colorScheme: 'green',\n  defaultCurrent: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage: false,\n  itemRender: null,\n  pageSize: null,\n  pageSizeOptions: [10, 20, 50, 100],\n  responsive: null,\n  showLessItems: false,\n  total: 40\n});\n\nconst PagButton = props => {\n  const _React$useContext = React.useContext(PaginationContext),\n        colorScheme = _React$useContext.colorScheme;\n\n  const activeStyle = {\n    bg: useColorModeValue(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\")),\n    color: useColorModeValue('white', 'gray.200')\n  };\n  return /*#__PURE__*/React.createElement(chakra.a, Object.assign({\n    href: \"#\",\n    mx: 1,\n    px: 4,\n    py: 2,\n    fontSize: \"md\",\n    borderRadius: \"md\",\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    opacity: props.disabled && 0.6,\n    _hover: !props.disabled && activeStyle,\n    cursor: props.disabled && 'not-allowed'\n  }, props.active && activeStyle), props.children);\n};\n\nconst PaginationComp = () => {\n  const _React$useContext2 = React.useContext(PaginationContext),\n        colorScheme = _React$useContext2.colorScheme,\n        total = _React$useContext2.total;\n\n  const buttons = [];\n\n  for (let i = 1; i <= total; i++) {\n    buttons.push( /*#__PURE__*/React.createElement(PagButton, null, i));\n  }\n\n  return total > 0 && /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(PagButton, {\n    disabled: true\n  }, \"\\u25C0\\uFE0F\"), buttons, /*#__PURE__*/React.createElement(PagButton, null, \"\\u25B6\\uFE0F\"));\n};\n\nconst Pagination = props => {\n  const globalProps = React.useMemo(() => props, [props.colorScheme]);\n  const defaultProps = React.useContext(PaginationContext);\n  return /*#__PURE__*/React.createElement(PaginationContext.Provider, {\n    value: _objectSpread(_objectSpread({}, defaultProps), globalProps)\n  }, /*#__PURE__*/React.createElement(PaginationComp, null));\n};\n\nexport { Pagination };","map":{"version":3,"sources":["../src/providers/pagination-provider.js","../src/components/pagination-buttons.js","../src/components/pagination.js","../src/index.js"],"names":["PaginationContext","current","colorScheme","defaultCurrent","defaultPageSize","disabled","hideOnSinglePage","itemRender","pageSize","pageSizeOptions","responsive","showLessItems","total","PagButton","props","React","activeStyle","bg","useColorModeValue","color","PaginationComp","buttons","i","Pagination","globalProps","defaultProps","PagContext"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst PaginationContext = React.createContext({\n  current: null,\n  colorScheme: 'green',\n  defaultCurrent: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage:false,\n  itemRender:null,\n  pageSize:null,\n  pageSizeOptions:[10,20,50,100],\n  responsive:null,\n  showLessItems:false,\n  total: 40\n})\n\nexport default PaginationContext\n","import React from 'react'\n\nimport { useColorModeValue, chakra } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const PagButton = (props) => {\n  const { colorScheme } = React.useContext(PagContext)\n\n  const activeStyle = {\n    bg: useColorModeValue(`${colorScheme}.600`, `${colorScheme}.500`),\n    color: useColorModeValue('white', 'gray.200')\n  }\n  return (\n    <chakra.a\n      href='#'\n      mx={1}\n      px={4}\n      py={2}\n      fontSize='md'\n      borderRadius='md'\n      bg={useColorModeValue('white', 'gray.800')}\n      color={useColorModeValue('gray.700', 'gray.200')}\n      opacity={props.disabled && 0.6}\n      _hover={!props.disabled && activeStyle}\n      cursor={props.disabled && 'not-allowed'}\n      {...(props.active && activeStyle)}\n    >\n      {props.children}\n    </chakra.a>\n  )\n}\n","import React from 'react'\nimport { PagButton } from './pagination-buttons'\nimport { Flex } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const PaginationComp = () => {\n  const { colorScheme, total } = React.useContext(PagContext)\n  const buttons = []\n  for (let i = 1; i <= total; i++) {\n    buttons.push(<PagButton>{i}</PagButton>)\n  }\n  return (\n    total > 0 && (\n      <Flex>\n        <PagButton disabled>◀️</PagButton>\n\n        {buttons}\n        <PagButton>▶️</PagButton>\n      </Flex>\n    )\n  )\n}\n","import React from 'react'\n\nimport PagContext from './providers/pagination-provider'\nimport { PaginationComp } from './components/pagination'\nexport const Pagination = (props) => {\n  const globalProps = React.useMemo(() => props, [props.colorScheme])\n  const defaultProps = React.useContext(PagContext)\n  return (\n    <PagContext.Provider value={{ ...defaultProps, ...globalProps }}>\n      <PaginationComp />\n    </PagContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}