{"ast":null,"code":"import _slicedToArray from \"/var/www/html/Sites/choc-paginator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/var/www/html/Sites/choc-paginator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nimport { useColorModeValue, chakra, Box, Input, Menu, MenuButton, Button, MenuList, MenuOptionGroup, MenuItemOption, HStack, Text } from '@chakra-ui/react';\nconst defaultData = {\n  current: null,\n  defaultCurrent: 1,\n  defaultPage: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage: false,\n  itemRender: () => null,\n  pageSize: null,\n  pageNeighbours: 0,\n  pageSizeOptions: [10, 20, 50, 100],\n  responsive: null,\n  showQuickJumper: false,\n  showSizeChanger: null,\n  showTotal: () => '',\n  simple: null,\n  total: 0,\n  onChange: () => '',\n  onShowSizeChange: () => '',\n  size: 'md',\n  rounded: 'md',\n  baseStyles: null,\n  activeStyles: null,\n  hoverStyles: null,\n  colorScheme: 'green'\n};\nconst PaginationContext = React.createContext(_objectSpread({}, defaultData));\n\nconst usePaginationStyles = props => {\n  const _React$useContext = React.useContext(PaginationContext),\n        colorScheme = _React$useContext.colorScheme,\n        rounded = _React$useContext.rounded,\n        size = _React$useContext.size,\n        baseStyles = _React$useContext.baseStyles,\n        activeStyles = _React$useContext.activeStyles,\n        hoverStyles = _React$useContext.hoverStyles;\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\")),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  };\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  };\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    userSelect: 'none'\n  };\n\n  const getSizeStyle = size => {\n    var styles;\n\n    switch (size) {\n      case 'xs':\n        styles = {\n          px: 2,\n          fontSize: 'xs'\n        };\n        break;\n\n      case 'sm':\n        styles = {\n          px: 3,\n          py: 1,\n          fontSize: 'sm'\n        };\n        break;\n\n      case 'md':\n        styles = {\n          px: 4,\n          py: 1,\n          fontSize: 'md'\n        };\n        break;\n\n      case 'lg':\n        styles = {\n          px: 5,\n          py: 2,\n          fontSize: 'lg'\n        };\n        break;\n    }\n\n    return styles;\n  };\n\n  const sizeStyle = getSizeStyle(size);\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed'\n  };\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, sizeStyle), baseStyle), hoverStyle), props.active && activeStyle), props.disabled && disabledStyle);\n};\n\nconst PagButton = props => {\n  const paginationStyles = usePaginationStyles(props);\n  return /*#__PURE__*/React.createElement(chakra.span, Object.assign({\n    onClick: !props.disabled ? props.onClick : null,\n    mx: 1\n  }, paginationStyles), props.children);\n};\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst fetchPageNumbers = () => {\n  const props = React.useContext(PaginationContext);\n  const totalPages = Math.ceil(props.total / props.pageSize);\n  const currentPage = props.currentPage;\n  const pageNeighbours = props.pageNeighbours;\n  const totalNumbers = pageNeighbours * 2 + 3;\n  const totalBlocks = totalNumbers + 2;\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours);\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n    let pages = range(startPage, endPage);\n    const hasLeftSpill = startPage > 2;\n    const hasRightSpill = totalPages - endPage > 1;\n    const spillOffset = totalNumbers - (pages.length + 1);\n\n    switch (true) {\n      case hasLeftSpill && !hasRightSpill:\n        {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n      case !hasLeftSpill && hasRightSpill:\n        {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n      case hasLeftSpill && hasRightSpill:\n      default:\n        {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n    }\n\n    return [1, ...pages, totalPages];\n  }\n\n  return range(1, totalPages);\n};\n\nconst PaginationComp = () => {\n  const props = React.useContext(PaginationContext);\n  const totalPages = Math.ceil(props.total / props.pageSize);\n  const prevRender = props.itemRender(props.currentPage, 'prev');\n  const nextRender = props.itemRender(props.currentPage, 'next');\n  const leftRender = props.itemRender(props.currentPage, 'left');\n  const rightRender = props.itemRender(props.currentPage, 'right');\n  if (!totalPages || props.hideOnSinglePage && totalPages === 1) return null;\n  const pages = fetchPageNumbers();\n\n  const changePage = page => {\n    const currentPage = Math.max(0, Math.min(page, totalPages));\n    props.setCurrentPage(currentPage);\n    props.onChange(currentPage, totalPages, props.pageSize, props.total);\n  };\n\n  const fastBackward = () => {\n    const page = props.currentPage - props.pageNeighbours * 2 - 1;\n    changePage(page);\n  };\n\n  const fastForward = () => {\n    const page = props.currentPage + props.pageNeighbours * 2 + 1;\n    changePage(page);\n  };\n\n  const backward = () => {\n    changePage(props.currentPage - 1);\n  };\n\n  const forward = () => {\n    changePage(props.currentPage + 1);\n  };\n\n  const changePageSize = size => {\n    props.setPageSize(size);\n    props.onShowSizeChange(props.currentPage, size);\n  };\n\n  const totalRender = props.showTotal(props.total);\n\n  const _React$useState = React.useState(props.currentPage),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        simplePage = _React$useState2[0],\n        setSimplePage = _React$useState2[1];\n\n  const simplePageUpdate = e => {\n    e.preventDefault();\n\n    if (isNaN(simplePage)) {\n      setSimplePage(props.currentPage);\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(simplePage, totalPages)));\n    }\n  };\n\n  return props.total > 0 && /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    w: \"full\"\n  }, /*#__PURE__*/React.createElement(chakra.span, {\n    mx: 1,\n    my: \"auto\",\n    fontSize: props.size\n  }, totalRender), props.simple ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: simplePageUpdate\n  }, /*#__PURE__*/React.createElement(Input, {\n    textAlign: \"center\",\n    isDisabled: props.disabled,\n    my: \"auto\",\n    size: props.size === 'lg' ? 'md' : 'sm',\n    w: props.size === 'lg' ? 50 : 10,\n    value: simplePage,\n    onChange: e => setSimplePage(e.target.value)\n  })), /*#__PURE__*/React.createElement(chakra.span, {\n    mx: 1,\n    my: \"auto\",\n    fontSize: props.size\n  }, \"/ 5\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PagButton, {\n    disabled: props.currentPage === 1 || props.disabled,\n    onClick: backward\n  }, prevRender || '◀'), pages.map((page, index) => {\n    if (page === 'LEFT') return /*#__PURE__*/React.createElement(PagButton, {\n      key: index,\n      onClick: fastBackward\n    }, leftRender || '<<');\n    if (page === 'RIGHT') return /*#__PURE__*/React.createElement(PagButton, {\n      key: index,\n      onClick: fastForward\n    }, rightRender || '>>');\n    return /*#__PURE__*/React.createElement(PagButton, {\n      disabled: props.disabled,\n      active: page === props.currentPage,\n      key: \"page-\".concat(index),\n      onClick: () => changePage(page)\n    }, page);\n  }), /*#__PURE__*/React.createElement(PagButton, {\n    disabled: props.currentPage === totalPages || props.disabled,\n    onClick: forward\n  }, nextRender || '▶️')), props.showSizeChanger && /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuButton, {\n    m: 1,\n    as: Button,\n    rightIcon: \">\",\n    size: props.size === 'lg' ? 'md' : 'sm'\n  }, props.pageSize, \" / page\"), /*#__PURE__*/React.createElement(MenuList, null, /*#__PURE__*/React.createElement(MenuOptionGroup, {\n    onChange: changePageSize\n  }, props.pageSizeOptions.filter(opt => opt !== props.pageSize).map((opt, oid) => /*#__PURE__*/React.createElement(MenuItemOption, {\n    value: opt.toString(),\n    key: \"size\".concat(oid)\n  }, opt, \" / page\"))))), /*#__PURE__*/React.createElement(HStack, null, /*#__PURE__*/React.createElement(Text, {\n    wordBreak: \"unset\"\n  }, \"Go to:\"), /*#__PURE__*/React.createElement(Input, {\n    width: \"50px\"\n  })));\n};\n\nconst methods = ['itemRender', 'setCurrentPage'];\nconst nonMethods = Object.keys(defaultData).filter(k => !methods.includes(k));\n\nconst filterProps = props => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt]);\n    return acc;\n  }, []);\n  return React.useMemo(() => props, validProps);\n};\n\nconst Pagination = props => {\n  const defaultProps = React.useContext(PaginationContext);\n\n  const allProps = _objectSpread(_objectSpread({}, defaultProps), props);\n\n  const _React$useState3 = React.useState(allProps.current || allProps.defaultCurrent),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        currentPage = _React$useState4[0],\n        setCurrentPage = _React$useState4[1];\n\n  React.useEffect(() => {\n    props.current && setCurrentPage(props.current);\n  }, [props.current]);\n\n  const _React$useState5 = React.useState(allProps.pageSize || allProps.defaultPageSize),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        pageSize = _React$useState6[0],\n        setPageSize = _React$useState6[1];\n\n  const contextvalue = _objectSpread({}, allProps);\n\n  const value = React.useMemo(() => {\n    return _objectSpread(_objectSpread({}, contextvalue), {}, {\n      currentPage,\n      setCurrentPage,\n      pageSize,\n      setPageSize\n    });\n  }, [filterProps(contextvalue), currentPage, pageSize]);\n  return /*#__PURE__*/React.createElement(PaginationContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React.createElement(PaginationComp, null));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["../src/providers/pagination-provider.js","../src/services/styles.js","../src/components/pbutton.js","../src/services/fetch-page.js","../src/components/pagination.js","../src/services/filter-props.js","../src/index.js"],"names":["defaultData","current","defaultCurrent","defaultPage","defaultPageSize","disabled","hideOnSinglePage","itemRender","pageSize","pageNeighbours","pageSizeOptions","responsive","showQuickJumper","showSizeChanger","showTotal","simple","total","onChange","onShowSizeChange","size","rounded","baseStyles","activeStyles","hoverStyles","colorScheme","PaginationContext","usePaginationStyles","props","React","activeStyle","bg","useColorModeValue","color","cursor","hoverStyle","_hover","baseStyle","userSelect","getSizeStyle","styles","px","fontSize","py","sizeStyle","disabledStyle","opacity","PagButton","paginationStyles","LEFT_PAGE","RIGHT_PAGE","range","step","i","fetchPageNumbers","totalPages","Math","currentPage","totalNumbers","totalBlocks","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","PaginationComp","prevRender","nextRender","leftRender","rightRender","changePage","page","fastBackward","fastForward","backward","forward","changePageSize","totalRender","simplePageUpdate","e","isNaN","setSimplePage","opt","oid","methods","nonMethods","Object","k","filterProps","validProps","acc","Pagination","defaultProps","allProps","setCurrentPage","contextvalue","value","setPageSize","PagContext"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport const defaultData = {\n  current: null, //*\n  defaultCurrent: 1, //*\n  defaultPage: 1, //*\n  defaultPageSize: 10, //*\n  disabled: false, //*\n  hideOnSinglePage: false, //*\n  itemRender: () => null, //*\n  pageSize: null, //*\n  pageNeighbours: 0, //* indicates the number of additional page numbers to show on each side of the current page.\n  pageSizeOptions: [10, 20, 50, 100], //*\n  responsive: null,\n  showQuickJumper: false,\n  showSizeChanger: null, //*\n  showTotal: () => '', //*\n  simple: null, //*\n  total: 0, //*\n  onChange: () => '', //*\n  onShowSizeChange: () => '', //*\n  size: 'md', //*\n  rounded: 'md', //*\n  baseStyles: null, //*\n  activeStyles: null, //*\n  hoverStyles: null, //*\n  colorScheme: 'green' //*\n}\nconst PaginationContext = React.createContext({\n  ...defaultData\n})\n\nexport default PaginationContext\n","import React from 'react'\n\nimport { useColorModeValue } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const usePaginationStyles = (props) => {\n  const {\n    colorScheme,\n    rounded,\n    size,\n    baseStyles,\n    activeStyles,\n    hoverStyles\n  } = React.useContext(PagContext)\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(`${colorScheme}.600`, `${colorScheme}.500`),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  }\n\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  }\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    userSelect: 'none'\n  }\n  const getSizeStyle = (size) => {\n    var styles\n    switch (size) {\n      case 'xs':\n        styles = { px: 2, fontSize: 'xs' }\n        break\n\n      case 'sm':\n        styles = { px: 3, py: 1, fontSize: 'sm' }\n        break\n\n      case 'md':\n        styles = { px: 4, py: 1, fontSize: 'md' }\n        break\n\n      case 'lg':\n        styles = { px: 5, py: 2, fontSize: 'lg' }\n        break\n\n      default:\n        break\n    }\n    return styles\n  }\n  const sizeStyle = getSizeStyle(size)\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed'\n  }\n  return {\n    ...sizeStyle,\n    ...baseStyle,\n    ...hoverStyle,\n    ...(props.active && activeStyle),\n    ...(props.disabled && disabledStyle)\n  }\n}\n","import React from 'react'\n\nimport { chakra } from '@chakra-ui/react'\nimport { usePaginationStyles } from '../services/styles'\nexport const PagButton = (props) => {\n  const paginationStyles = usePaginationStyles(props)\n  return (\n    <chakra.span\n      onClick={!props.disabled ? props.onClick : null}\n      mx={1}\n      {...paginationStyles}\n    >\n      {props.children}\n    </chakra.span>\n  )\n}\n","import React from 'react'\nimport PagContext from '../providers/pagination-provider'\n\nconst LEFT_PAGE = 'LEFT'\n\nconst RIGHT_PAGE = 'RIGHT'\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nexport const fetchPageNumbers = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n  const currentPage = props.currentPage\n  const pageNeighbours = props.pageNeighbours\n\n  /**\n   * totalNumbers: the total page numbers to show on the control\n   * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n   */\n  const totalNumbers = pageNeighbours * 2 + 3\n  const totalBlocks = totalNumbers + 2\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours)\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours)\n    let pages = range(startPage, endPage)\n\n    /**\n     * hasLeftSpill: has hidden pages to the left\n     * hasRightSpill: has hidden pages to the right\n     * spillOffset: number of hidden pages either to the left or to the right\n     */\n    const hasLeftSpill = startPage > 2\n    const hasRightSpill = totalPages - endPage > 1\n    const spillOffset = totalNumbers - (pages.length + 1)\n\n    switch (true) {\n      // handle: (1) < {5 6} [7] {8 9} (10)\n      case hasLeftSpill && !hasRightSpill: {\n        const extraPages = range(startPage - spillOffset, startPage - 1)\n        pages = [LEFT_PAGE, ...extraPages, ...pages]\n        break\n      }\n\n      // handle: (1) {2 3} [4] {5 6} > (10)\n      case !hasLeftSpill && hasRightSpill: {\n        const extraPages = range(endPage + 1, endPage + spillOffset)\n        pages = [...pages, ...extraPages, RIGHT_PAGE]\n        break\n      }\n\n      // handle: (1) < {4 5} [6] {7 8} > (10)\n      case hasLeftSpill && hasRightSpill:\n      default: {\n        pages = [LEFT_PAGE, ...pages, RIGHT_PAGE]\n        break\n      }\n    }\n\n    return [1, ...pages, totalPages]\n  }\n\n  return range(1, totalPages)\n}\n","import React from 'react'\nimport { PagButton } from './pbutton'\nimport {\n  Flex,\n  Menu,\n  MenuButton,\n  Button,\n  MenuList,\n  Box,\n  MenuOptionGroup,\n  MenuItemOption,\n  chakra,\n  Input,\n  HStack,\n  Text\n} from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\nimport { fetchPageNumbers } from '../services/fetch-page'\n\nexport const PaginationComp = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n\n  const prevRender = props.itemRender(props.currentPage, 'prev')\n  const nextRender = props.itemRender(props.currentPage, 'next')\n  const leftRender = props.itemRender(props.currentPage, 'left')\n  const rightRender = props.itemRender(props.currentPage, 'right')\n\n  if (!totalPages || (props.hideOnSinglePage && totalPages === 1)) return null\n\n  const pages = fetchPageNumbers()\n\n  const changePage = (page) => {\n    const currentPage = Math.max(0, Math.min(page, totalPages))\n    props.setCurrentPage(currentPage)\n    props.onChange(currentPage, totalPages, props.pageSize, props.total)\n  }\n\n  const fastBackward = () => {\n    const page = props.currentPage - props.pageNeighbours * 2 - 1\n    changePage(page)\n  }\n\n  const fastForward = () => {\n    const page = props.currentPage + props.pageNeighbours * 2 + 1\n    changePage(page)\n  }\n\n  const backward = () => {\n    changePage(props.currentPage - 1)\n  }\n\n  const forward = () => {\n    changePage(props.currentPage + 1)\n  }\n\n  const changePageSize = (size) => {\n    props.setPageSize(size)\n    props.onShowSizeChange(props.currentPage, size)\n  }\n  const totalRender = props.showTotal(props.total)\n\n  const [simplePage, setSimplePage] = React.useState(props.currentPage)\n  const simplePageUpdate = (e) => {\n    e.preventDefault()\n    if (isNaN(simplePage)) {\n      setSimplePage(props.currentPage)\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(simplePage, totalPages)))\n    }\n  }\n  return (\n    props.total > 0 && (\n      <Box display='flex' w='full'>\n        <chakra.span mx={1} my='auto' fontSize={props.size}>\n          {totalRender}\n        </chakra.span>\n        {props.simple ? (\n          <React.Fragment>\n            <form onSubmit={simplePageUpdate}>\n              <Input\n                textAlign='center'\n                isDisabled={props.disabled}\n                my='auto'\n                size={props.size === 'lg' ? 'md' : 'sm'}\n                w={props.size === 'lg' ? 50 : 10}\n                value={simplePage}\n                onChange={(e) => setSimplePage(e.target.value)}\n              />\n            </form>\n            <chakra.span mx={1} my='auto' fontSize={props.size}>\n              / 5\n            </chakra.span>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <PagButton\n              disabled={props.currentPage === 1 || props.disabled}\n              onClick={backward}\n            >\n              {prevRender || '◀'}\n            </PagButton>\n\n            {pages.map((page, index) => {\n              if (page === 'LEFT')\n                return (\n                  <PagButton key={index} onClick={fastBackward}>\n                    {leftRender || '<<'}\n                  </PagButton>\n                )\n\n              if (page === 'RIGHT')\n                return (\n                  <PagButton key={index} onClick={fastForward}>\n                    {rightRender || '>>'}\n                  </PagButton>\n                )\n              return (\n                <PagButton\n                  disabled={props.disabled}\n                  active={page === props.currentPage}\n                  key={`page-${index}`}\n                  onClick={() => changePage(page)}\n                >\n                  {page}\n                </PagButton>\n              )\n            })}\n            <PagButton\n              disabled={props.currentPage === totalPages || props.disabled}\n              onClick={forward}\n            >\n              {nextRender || '▶️'}\n            </PagButton>\n          </React.Fragment>\n        )}\n        {props.showSizeChanger && (\n          <Menu>\n            <MenuButton\n              m={1}\n              as={Button}\n              rightIcon='>'\n              size={props.size === 'lg' ? 'md' : 'sm'}\n            >\n              {props.pageSize} / page\n            </MenuButton>\n            <MenuList>\n              <MenuOptionGroup onChange={changePageSize}>\n                {props.pageSizeOptions\n                  .filter((opt) => opt !== props.pageSize)\n                  .map((opt, oid) => (\n                    <MenuItemOption value={opt.toString()} key={`size${oid}`}>\n                      {opt} / page\n                    </MenuItemOption>\n                  ))}\n              </MenuOptionGroup>\n            </MenuList>\n          </Menu>\n        )}\n        <HStack >\n          <Text wordBreak='unset'>Go to:</Text>\n          <Input width='50px' />\n        </HStack>\n      </Box>\n    )\n  )\n}\n","import React from 'react'\nimport { defaultData } from '../providers/pagination-provider'\n\nconst methods = ['itemRender', 'setCurrentPage']\nconst nonMethods = Object.keys(defaultData).filter((k) => !methods.includes(k))\n\nexport const filterProps = (props) => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt])\n    return acc\n  }, [])\n  return React.useMemo(() => props, validProps)\n}\n","import React from 'react'\n\nimport PagContext from './providers/pagination-provider'\nimport { PaginationComp } from './components/pagination'\n\nimport { filterProps } from './services/filter-props'\n\nconst Pagination = (props) => {\n  const defaultProps = React.useContext(PagContext)\n  const allProps = { ...defaultProps, ...props }\n  const [currentPage, setCurrentPage] = React.useState(\n    allProps.current || allProps.defaultCurrent\n  )\n  React.useEffect(() => {\n    props.current && setCurrentPage(props.current)\n  }, [props.current])\n  const [pageSize, setPageSize] = React.useState(\n    allProps.pageSize || allProps.defaultPageSize\n  )\n  const contextvalue = { ...allProps }\n  const value = React.useMemo(() => {\n    return {\n      ...contextvalue,\n      currentPage,\n      setCurrentPage,\n      pageSize,\n      setPageSize\n    }\n  }, [filterProps(contextvalue), currentPage, pageSize])\n  return (\n    <PagContext.Provider value={value}>\n      <PaginationComp />\n    </PagContext.Provider>\n  )\n}\n\nexport default Pagination\n"]},"metadata":{},"sourceType":"module"}