{"ast":null,"code":"import React from 'react';\nimport { useColorModeValue, Button, Box, chakra, Input, Menu, MenuButton, MenuList, MenuOptionGroup, MenuItemOption, HStack, Text } from '@chakra-ui/react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar defaultData = {\n  current: null,\n  defaultCurrent: 1,\n  defaultPage: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage: false,\n  itemRender: function itemRender() {\n    return null;\n  },\n  pageSize: null,\n  pageNeighbours: 0,\n  pageSizeOptions: [10, 20, 50, 100],\n  responsive: null,\n  paginationProps: null,\n  showQuickJumper: false,\n  showSizeChanger: null,\n  showTotal: function showTotal() {\n    return '';\n  },\n  simple: null,\n  total: 0,\n  onChange: function onChange() {\n    return '';\n  },\n  onShowSizeChange: function onShowSizeChange() {\n    return '';\n  },\n  size: 'md',\n  rounded: 'md',\n  baseStyles: null,\n  activeStyles: null,\n  hoverStyles: null,\n  colorScheme: 'green'\n};\nvar PaginationContext = React.createContext(_extends({}, defaultData));\n\nvar usePaginationStyles = function usePaginationStyles(props) {\n  var _React$useContext = React.useContext(PaginationContext),\n      colorScheme = _React$useContext.colorScheme,\n      rounded = _React$useContext.rounded,\n      size = _React$useContext.size,\n      baseStyles = _React$useContext.baseStyles,\n      activeStyles = _React$useContext.activeStyles,\n      hoverStyles = _React$useContext.hoverStyles;\n\n  var activeStyle = activeStyles || {\n    bg: useColorModeValue(colorScheme + \".600\", colorScheme + \".500\"),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  };\n  var hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  };\n  var baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    userSelect: 'none'\n  };\n\n  var getSizeStyle = function getSizeStyle(size) {\n    var styles;\n\n    switch (size) {\n      case 'xs':\n        styles = {\n          px: 2,\n          fontSize: 'xs'\n        };\n        break;\n\n      case 'sm':\n        styles = {\n          px: 3,\n          py: 1,\n          fontSize: 'sm'\n        };\n        break;\n\n      case 'md':\n        styles = {\n          px: 4,\n          py: 1,\n          fontSize: 'md'\n        };\n        break;\n\n      case 'lg':\n        styles = {\n          px: 5,\n          py: 2,\n          fontSize: 'lg'\n        };\n        break;\n    }\n\n    return styles;\n  };\n\n  var sizeStyle = getSizeStyle(size);\n  var disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed'\n  };\n  return _extends({}, sizeStyle, baseStyle, hoverStyle, props.active && activeStyle, props.disabled && disabledStyle);\n};\n\nvar PagButton = function PagButton(props) {\n  var paginationStyles = usePaginationStyles(props);\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    onClick: !props.disabled ? props.onClick : null,\n    as: props.as,\n    mx: 1,\n    my: \"auto\"\n  }, paginationStyles, {\n    _focus: {\n      boxShadow: 'none'\n    },\n    size: props.size\n  }), props.children);\n};\n\nvar LEFT_PAGE = 'LEFT';\nvar RIGHT_PAGE = 'RIGHT';\n\nvar range = function range(from, to, step) {\n  if (step === void 0) {\n    step = 1;\n  }\n\n  var i = from;\n  var range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nvar fetchPageNumbers = function fetchPageNumbers() {\n  var props = React.useContext(PaginationContext);\n  var totalPages = Math.ceil(props.total / props.pageSize);\n  var currentPage = props.currentPage;\n  var pageNeighbours = props.pageNeighbours;\n  var totalNumbers = pageNeighbours * 2 + 3;\n  var totalBlocks = totalNumbers + 2;\n\n  if (totalPages > totalBlocks) {\n    var startPage = Math.max(2, currentPage - pageNeighbours);\n    var endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n    var pages = range(startPage, endPage);\n    var hasLeftSpill = startPage > 2;\n    var hasRightSpill = totalPages - endPage > 1;\n    var spillOffset = totalNumbers - (pages.length + 1);\n\n    switch (true) {\n      case hasLeftSpill && !hasRightSpill:\n        {\n          var extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE].concat(extraPages, pages);\n          break;\n        }\n\n      case !hasLeftSpill && hasRightSpill:\n        {\n          var _extraPages = range(endPage + 1, endPage + spillOffset);\n\n          pages = [].concat(pages, _extraPages, [RIGHT_PAGE]);\n          break;\n        }\n\n      case hasLeftSpill && hasRightSpill:\n      default:\n        {\n          pages = [LEFT_PAGE].concat(pages, [RIGHT_PAGE]);\n          break;\n        }\n    }\n\n    return [1].concat(pages, [totalPages]);\n  }\n\n  return range(1, totalPages);\n};\n\nvar PaginationComp = function PaginationComp() {\n  var props = React.useContext(PaginationContext);\n  var totalPages = Math.ceil(props.total / props.pageSize);\n  var prevRender = props.itemRender(props.currentPage, 'prev');\n  var nextRender = props.itemRender(props.currentPage, 'next');\n  var leftRender = props.itemRender(props.currentPage, 'backward');\n  var rightRender = props.itemRender(props.currentPage, 'forward');\n  var jumperRender = props.itemRender(props.currentPage, 'jumper');\n  var pageRender = props.itemRender(props.currentPage, 'page');\n  var allRender = props.itemRender(props.currentPage, 'all');\n  var totalRender = props.showTotal(props.total);\n  if (!totalPages || props.hideOnSinglePage && totalPages === 1) return null;\n  var pages = fetchPageNumbers();\n\n  var changePage = function changePage(page) {\n    var currentPage = Math.max(0, Math.min(page, totalPages));\n    props.setCurrentPage(currentPage);\n    props.onChange(currentPage, totalPages, props.pageSize, props.total);\n  };\n\n  var fastBackward = function fastBackward() {\n    var page = props.currentPage - props.pageNeighbours * 2 - 1;\n    changePage(page);\n  };\n\n  var fastForward = function fastForward() {\n    var page = props.currentPage + props.pageNeighbours * 2 + 1;\n    changePage(page);\n  };\n\n  var backward = function backward() {\n    changePage(props.currentPage - 1);\n  };\n\n  var forward = function forward() {\n    changePage(props.currentPage + 1);\n  };\n\n  var changePageSize = function changePageSize(size) {\n    props.setPageSize(size);\n    props.onShowSizeChange(props.currentPage, size);\n  };\n\n  var _React$useState = React.useState(props.currentPage),\n      simplePage = _React$useState[0],\n      setSimplePage = _React$useState[1];\n\n  var _React$useState2 = React.useState(''),\n      pageJumper = _React$useState2[0],\n      setPageJumper = _React$useState2[1];\n\n  var simplePageUpdate = function simplePageUpdate(e) {\n    e.preventDefault();\n\n    if (isNaN(simplePage)) {\n      setSimplePage(props.currentPage);\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(simplePage, totalPages)));\n    }\n  };\n\n  var pageJumperUpdate = function pageJumperUpdate(e) {\n    e.preventDefault();\n\n    if (isNaN(pageJumper)) {\n      setPageJumper('');\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(pageJumper, totalPages)));\n      setPageJumper('');\n    }\n  };\n\n  return props.total > 0 && /*#__PURE__*/React.createElement(Box, props.paginationProps || {\n    w: 'full',\n    justifyContent: 'center'\n  }, /*#__PURE__*/React.createElement(chakra.span, {\n    mx: 1,\n    my: \"auto\",\n    fontSize: props.size\n  }, totalRender), props.simple ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: simplePageUpdate\n  }, /*#__PURE__*/React.createElement(Input, {\n    textAlign: \"center\",\n    isDisabled: props.disabled,\n    my: \"auto\",\n    size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm',\n    w: props.size === 'lg' ? 50 : 10,\n    value: simplePage,\n    onChange: function onChange(e) {\n      return setSimplePage(e.target.value);\n    }\n  })), /*#__PURE__*/React.createElement(chakra.span, {\n    mx: 1,\n    my: \"auto\",\n    fontSize: props.size\n  }, \"/ 5\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PagButton, {\n    as: allRender || prevRender,\n    disabled: props.currentPage === 1 || props.disabled,\n    onClick: backward,\n    size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n  }, !prevRender && '<'), pages.map(function (page, index) {\n    if (page === 'LEFT') return /*#__PURE__*/React.createElement(Button, {\n      as: allRender || rightRender,\n      key: index,\n      onClick: fastBackward,\n      size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n    }, !leftRender && '<<');\n    if (page === 'RIGHT') return /*#__PURE__*/React.createElement(Button, {\n      as: allRender || rightRender,\n      key: index,\n      onClick: fastForward,\n      size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n    }, !rightRender && '>>');\n    return /*#__PURE__*/React.createElement(PagButton, {\n      as: allRender || pageRender,\n      disabled: props.disabled,\n      active: page === props.currentPage,\n      key: \"page-\" + index,\n      onClick: function onClick() {\n        return changePage(page);\n      },\n      size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n    }, page);\n  }), /*#__PURE__*/React.createElement(PagButton, {\n    as: allRender || nextRender,\n    disabled: props.currentPage === totalPages || props.disabled,\n    onClick: forward,\n    size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n  }, !nextRender && '>')), props.showSizeChanger && /*#__PURE__*/React.createElement(Menu, null, /*#__PURE__*/React.createElement(MenuButton, null, /*#__PURE__*/React.createElement(PagButton, {\n    mx: 1,\n    as: allRender || jumperRender || Button,\n    disabled: props.disabled,\n    size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n  }, props.pageSize, \" / page\")), /*#__PURE__*/React.createElement(MenuList, null, /*#__PURE__*/React.createElement(MenuOptionGroup, {\n    onChange: changePageSize\n  }, props.pageSizeOptions.filter(function (opt) {\n    return opt !== props.pageSize;\n  }).map(function (opt, oid) {\n    return /*#__PURE__*/React.createElement(MenuItemOption, {\n      fontSize: props.size,\n      value: opt.toString(),\n      key: \"size\" + oid\n    }, opt, \" / page\");\n  })))), /*#__PURE__*/React.createElement(HStack, {\n    as: \"form\",\n    onSubmit: pageJumperUpdate\n  }, /*#__PURE__*/React.createElement(Text, {\n    wordBreak: \"unset\"\n  }, \"Go to:\"), /*#__PURE__*/React.createElement(Input, {\n    width: \"50px\",\n    value: pageJumper,\n    onChange: function onChange(e) {\n      return setPageJumper(e.target.value);\n    },\n    size: props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n  })));\n};\n\nvar methods = ['itemRender', 'setCurrentPage'];\nvar nonMethods = Object.keys(defaultData).filter(function (k) {\n  return !methods.includes(k);\n});\n\nvar filterProps = function filterProps(props) {\n  var validProps = nonMethods.reduce(function (acc, nxt) {\n    acc.push(props[nxt]);\n    return acc;\n  }, []);\n  return React.useMemo(function () {\n    return props;\n  }, validProps);\n};\n\nvar Pagination = function Pagination(props) {\n  var defaultProps = React.useContext(PaginationContext);\n\n  var allProps = _extends({}, defaultProps, props);\n\n  var _React$useState = React.useState(allProps.current || allProps.defaultCurrent),\n      currentPage = _React$useState[0],\n      setCurrentPage = _React$useState[1];\n\n  React.useEffect(function () {\n    props.current && setCurrentPage(props.current);\n  }, [props.current]);\n\n  var _React$useState2 = React.useState(allProps.pageSize || allProps.defaultPageSize),\n      pageSize = _React$useState2[0],\n      setPageSize = _React$useState2[1];\n\n  var contextvalue = _extends({}, allProps);\n\n  var value = React.useMemo(function () {\n    return _extends({}, contextvalue, {\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      pageSize: pageSize,\n      setPageSize: setPageSize\n    });\n  }, [filterProps(contextvalue), currentPage, pageSize]);\n  return /*#__PURE__*/React.createElement(PaginationContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React.createElement(PaginationComp, null));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["../src/providers/pagination-provider.js","../src/services/styles.js","../src/components/pbutton.js","../src/services/fetch-page.js","../src/components/pagination.js","../src/services/filter-props.js","../src/index.js"],"names":["defaultData","current","defaultCurrent","defaultPage","defaultPageSize","disabled","hideOnSinglePage","itemRender","pageSize","pageNeighbours","pageSizeOptions","responsive","paginationProps","showQuickJumper","showSizeChanger","showTotal","simple","total","onChange","onShowSizeChange","size","rounded","baseStyles","activeStyles","hoverStyles","colorScheme","PaginationContext","React","usePaginationStyles","activeStyle","bg","useColorModeValue","color","cursor","hoverStyle","props","_hover","baseStyle","userSelect","getSizeStyle","styles","px","fontSize","py","sizeStyle","disabledStyle","opacity","PagButton","paginationStyles","boxShadow","LEFT_PAGE","RIGHT_PAGE","range","step","i","fetchPageNumbers","totalPages","Math","currentPage","totalNumbers","totalBlocks","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","PaginationComp","prevRender","nextRender","leftRender","rightRender","jumperRender","pageRender","allRender","totalRender","changePage","fastBackward","page","fastForward","backward","forward","changePageSize","simplePage","setSimplePage","pageJumper","setPageJumper","simplePageUpdate","e","isNaN","pageJumperUpdate","w","justifyContent","opt","oid","methods","nonMethods","filterProps","validProps","acc","Pagination","defaultProps","allProps","setCurrentPage","setPageSize","contextvalue","value","PagContext"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport const defaultData = {\n  current: null, //*\n  defaultCurrent: 1, //*\n  defaultPage: 1, //*\n  defaultPageSize: 10, //*\n  disabled: false, //*\n  hideOnSinglePage: false, //*\n  itemRender: () => null, //*\n  pageSize: null, //*\n  pageNeighbours: 0, //* indicates the number of additional page numbers to show on each side of the current page.\n  pageSizeOptions: [10, 20, 50, 100], //*\n  responsive: null,\n  paginationProps: null, //*\n  showQuickJumper: false, //*\n  showSizeChanger: null, //*\n  showTotal: () => '', //*\n  simple: null, //*\n  total: 0, //*\n  onChange: () => '', //*\n  onShowSizeChange: () => '', //*\n  size: 'md', //*\n  rounded: 'md', //*\n  baseStyles: null, //*\n  activeStyles: null, //*\n  hoverStyles: null, //*\n  colorScheme: 'green' //*\n}\nconst PaginationContext = React.createContext({\n  ...defaultData\n})\n\nexport default PaginationContext\n","import React from 'react'\n\nimport { useColorModeValue } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const usePaginationStyles = (props) => {\n  const {\n    colorScheme,\n    rounded,\n    size,\n    baseStyles,\n    activeStyles,\n    hoverStyles\n  } = React.useContext(PagContext)\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(`${colorScheme}.600`, `${colorScheme}.500`),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  }\n\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  }\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200'),\n    userSelect: 'none'\n  }\n  const getSizeStyle = (size) => {\n    var styles\n    switch (size) {\n      case 'xs':\n        styles = { px: 2, fontSize: 'xs' }\n        break\n\n      case 'sm':\n        styles = { px: 3, py: 1, fontSize: 'sm' }\n        break\n\n      case 'md':\n        styles = { px: 4, py: 1, fontSize: 'md' }\n        break\n\n      case 'lg':\n        styles = { px: 5, py: 2, fontSize: 'lg' }\n        break\n\n      default:\n        break\n    }\n    return styles\n  }\n  const sizeStyle = getSizeStyle(size)\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed'\n  }\n  return {\n    ...sizeStyle,\n    ...baseStyle,\n    ...hoverStyle,\n    ...(props.active && activeStyle),\n    ...(props.disabled && disabledStyle)\n  }\n}\n","import React from 'react'\n\nimport { chakra, Button } from '@chakra-ui/react'\nimport { usePaginationStyles } from '../services/styles'\nexport const PagButton = (props) => {\n  const paginationStyles = usePaginationStyles(props)\n  return (\n    <Button\n      onClick={!props.disabled ? props.onClick : null}\n      as={props.as}\n      mx={1}\n      my='auto'\n      {...paginationStyles}\n      _focus={{ boxShadow: 'none' }}\n      size={props.size}\n    >\n      {props.children}\n    </Button>\n  )\n}\n","import React from 'react'\nimport PagContext from '../providers/pagination-provider'\n\nconst LEFT_PAGE = 'LEFT'\n\nconst RIGHT_PAGE = 'RIGHT'\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nexport const fetchPageNumbers = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n  const currentPage = props.currentPage\n  const pageNeighbours = props.pageNeighbours\n\n  /**\n   * totalNumbers: the total page numbers to show on the control\n   * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n   */\n  const totalNumbers = pageNeighbours * 2 + 3\n  const totalBlocks = totalNumbers + 2\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours)\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours)\n    let pages = range(startPage, endPage)\n\n    /**\n     * hasLeftSpill: has hidden pages to the left\n     * hasRightSpill: has hidden pages to the right\n     * spillOffset: number of hidden pages either to the left or to the right\n     */\n    const hasLeftSpill = startPage > 2\n    const hasRightSpill = totalPages - endPage > 1\n    const spillOffset = totalNumbers - (pages.length + 1)\n\n    switch (true) {\n      // handle: (1) < {5 6} [7] {8 9} (10)\n      case hasLeftSpill && !hasRightSpill: {\n        const extraPages = range(startPage - spillOffset, startPage - 1)\n        pages = [LEFT_PAGE, ...extraPages, ...pages]\n        break\n      }\n\n      // handle: (1) {2 3} [4] {5 6} > (10)\n      case !hasLeftSpill && hasRightSpill: {\n        const extraPages = range(endPage + 1, endPage + spillOffset)\n        pages = [...pages, ...extraPages, RIGHT_PAGE]\n        break\n      }\n\n      // handle: (1) < {4 5} [6] {7 8} > (10)\n      case hasLeftSpill && hasRightSpill:\n      default: {\n        pages = [LEFT_PAGE, ...pages, RIGHT_PAGE]\n        break\n      }\n    }\n\n    return [1, ...pages, totalPages]\n  }\n\n  return range(1, totalPages)\n}\n","import React from 'react'\nimport { PagButton } from './pbutton'\nimport {\n  Menu,\n  MenuButton,\n  Button,\n  MenuList,\n  Box,\n  MenuOptionGroup,\n  MenuItemOption,\n  chakra,\n  Input,\n  HStack,\n  Text\n} from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\nimport { fetchPageNumbers } from '../services/fetch-page'\n\nexport const PaginationComp = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n\n  const prevRender = props.itemRender(props.currentPage, 'prev')\n  const nextRender = props.itemRender(props.currentPage, 'next')\n  const leftRender = props.itemRender(props.currentPage, 'backward')\n  const rightRender = props.itemRender(props.currentPage, 'forward')\n  const jumperRender = props.itemRender(props.currentPage, 'jumper')\n  const pageRender = props.itemRender(props.currentPage, 'page')\n  const allRender = props.itemRender(props.currentPage, 'all')\n  const totalRender = props.showTotal(props.total)\n\n  if (!totalPages || (props.hideOnSinglePage && totalPages === 1)) return null\n\n  const pages = fetchPageNumbers()\n\n  const changePage = (page) => {\n    const currentPage = Math.max(0, Math.min(page, totalPages))\n    props.setCurrentPage(currentPage)\n    props.onChange(currentPage, totalPages, props.pageSize, props.total)\n  }\n\n  const fastBackward = () => {\n    const page = props.currentPage - props.pageNeighbours * 2 - 1\n    changePage(page)\n  }\n\n  const fastForward = () => {\n    const page = props.currentPage + props.pageNeighbours * 2 + 1\n    changePage(page)\n  }\n\n  const backward = () => {\n    changePage(props.currentPage - 1)\n  }\n\n  const forward = () => {\n    changePage(props.currentPage + 1)\n  }\n\n  const changePageSize = (size) => {\n    props.setPageSize(size)\n    props.onShowSizeChange(props.currentPage, size)\n  }\n\n  const [simplePage, setSimplePage] = React.useState(props.currentPage)\n  const [pageJumper, setPageJumper] = React.useState('')\n\n  const simplePageUpdate = (e) => {\n    e.preventDefault()\n    if (isNaN(simplePage)) {\n      setSimplePage(props.currentPage)\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(simplePage, totalPages)))\n    }\n  }\n  const pageJumperUpdate = (e) => {\n    e.preventDefault()\n    if (isNaN(pageJumper)) {\n      setPageJumper('')\n    } else {\n      props.setCurrentPage(Math.max(0, Math.min(pageJumper, totalPages)))\n      setPageJumper('')\n    }\n  }\n  return (\n    props.total > 0 && (\n      <Box\n        {...(props.paginationProps || { w: 'full', justifyContent: 'center' })}\n      >\n        <chakra.span mx={1} my='auto' fontSize={props.size}>\n          {totalRender}\n        </chakra.span>\n        {props.simple ? (\n          <React.Fragment>\n            <form onSubmit={simplePageUpdate}>\n              <Input\n                textAlign='center'\n                isDisabled={props.disabled}\n                my='auto'\n                size={\n                  props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n                }\n                w={props.size === 'lg' ? 50 : 10}\n                value={simplePage}\n                onChange={(e) => setSimplePage(e.target.value)}\n              />\n            </form>\n            <chakra.span mx={1} my='auto' fontSize={props.size}>\n              / 5\n            </chakra.span>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <PagButton\n              as={allRender || prevRender}\n              disabled={props.currentPage === 1 || props.disabled}\n              onClick={backward}\n              size={\n                props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n              }\n            >\n              {!prevRender && '<'}\n            </PagButton>\n\n            {pages.map((page, index) => {\n              if (page === 'LEFT')\n                return (\n                  <Button\n                    as={allRender || rightRender}\n                    key={index}\n                    onClick={fastBackward}\n                    size={\n                      props.size === 'lg'\n                        ? 'md'\n                        : props.size === 'xs'\n                        ? 'xs'\n                        : 'sm'\n                    }\n                  >\n                    {!leftRender && '<<'}\n                  </Button>\n                )\n\n              if (page === 'RIGHT')\n                return (\n                  <Button\n                    as={allRender || rightRender}\n                    key={index}\n                    onClick={fastForward}\n                    size={\n                      props.size === 'lg'\n                        ? 'md'\n                        : props.size === 'xs'\n                        ? 'xs'\n                        : 'sm'\n                    }\n                  >\n                    {!rightRender && '>>'}\n                  </Button>\n                )\n              return (\n                <PagButton\n                  as={allRender || pageRender}\n                  disabled={props.disabled}\n                  active={page === props.currentPage}\n                  key={`page-${index}`}\n                  onClick={() => changePage(page)}\n                  size={\n                    props.size === 'lg'\n                      ? 'md'\n                      : props.size === 'xs'\n                      ? 'xs'\n                      : 'sm'\n                  }\n                >\n                  {page}\n                </PagButton>\n              )\n            })}\n            <PagButton\n              as={allRender || nextRender}\n              disabled={props.currentPage === totalPages || props.disabled}\n              onClick={forward}\n              size={\n                props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n              }\n            >\n              {!nextRender && '>'}\n            </PagButton>\n          </React.Fragment>\n        )}\n        {props.showSizeChanger && (\n          <Menu>\n            <MenuButton>\n              <PagButton\n                mx={1}\n                as={allRender || jumperRender || Button}\n                disabled={props.disabled}\n                size={\n                  props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n                }\n              >\n                {props.pageSize} / page\n              </PagButton>\n            </MenuButton>\n            <MenuList>\n              <MenuOptionGroup onChange={changePageSize}>\n                {props.pageSizeOptions\n                  .filter((opt) => opt !== props.pageSize)\n                  .map((opt, oid) => (\n                    <MenuItemOption\n                      fontSize={props.size}\n                      value={opt.toString()}\n                      key={`size${oid}`}\n                    >\n                      {opt} / page\n                    </MenuItemOption>\n                  ))}\n              </MenuOptionGroup>\n            </MenuList>\n          </Menu>\n        )}\n        <HStack as='form' onSubmit={pageJumperUpdate}>\n          <Text wordBreak='unset'>Go to:</Text>\n          <Input\n            width='50px'\n            value={pageJumper}\n            onChange={(e) => setPageJumper(e.target.value)}\n            size={\n              props.size === 'lg' ? 'md' : props.size === 'xs' ? 'xs' : 'sm'\n            }\n          />\n        </HStack>\n      </Box>\n    )\n  )\n}\n","import React from 'react'\nimport { defaultData } from '../providers/pagination-provider'\n\nconst methods = ['itemRender', 'setCurrentPage']\nconst nonMethods = Object.keys(defaultData).filter((k) => !methods.includes(k))\n\nexport const filterProps = (props) => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt])\n    return acc\n  }, [])\n  return React.useMemo(() => props, validProps)\n}\n","import React from 'react'\n\nimport PagContext from './providers/pagination-provider'\nimport { PaginationComp } from './components/pagination'\n\nimport { filterProps } from './services/filter-props'\n\nconst Pagination = (props) => {\n  const defaultProps = React.useContext(PagContext)\n  const allProps = { ...defaultProps, ...props }\n  const [currentPage, setCurrentPage] = React.useState(\n    allProps.current || allProps.defaultCurrent\n  )\n  React.useEffect(() => {\n    props.current && setCurrentPage(props.current)\n  }, [props.current])\n  const [pageSize, setPageSize] = React.useState(\n    allProps.pageSize || allProps.defaultPageSize\n  )\n  const contextvalue = { ...allProps }\n  const value = React.useMemo(() => {\n    return {\n      ...contextvalue,\n      currentPage,\n      setCurrentPage,\n      pageSize,\n      setPageSize\n    }\n  }, [filterProps(contextvalue), currentPage, pageSize])\n  return (\n    <PagContext.Provider value={value}>\n      <PaginationComp />\n    </PagContext.Provider>\n  )\n}\n\nexport default Pagination\n"]},"metadata":{},"sourceType":"module"}