{"ast":null,"code":"import _slicedToArray from \"/var/www/html/Sites/choc-paginator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/var/www/html/Sites/choc-paginator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nimport { useColorModeValue, chakra, Flex } from '@chakra-ui/react';\nconst defaultData = {\n  current: null,\n  defaultCurrent: 1,\n  defaultPage: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage: false,\n  itemRender: () => null,\n  pageSize: null,\n  pageNeighbours: 0,\n  pageSizeOptions: [10, 20, 50, 100],\n  responsive: null,\n  showLessItems: false,\n  showQuickJumper: false,\n  showSizeChanger: null,\n  showTitle: true,\n  showTotal: null,\n  simple: null,\n  total: 0,\n  onChange: () => null,\n  size: 'md',\n  rounded: 'md',\n  baseStyles: null,\n  activeStyles: null,\n  hoverStyles: null,\n  colorScheme: 'green'\n};\nconst PaginationContext = React.createContext(_objectSpread({}, defaultData));\n\nconst usePaginationStyles = props => {\n  const _React$useContext = React.useContext(PaginationContext),\n        colorScheme = _React$useContext.colorScheme,\n        rounded = _React$useContext.rounded,\n        size = _React$useContext.size,\n        baseStyles = _React$useContext.baseStyles,\n        activeStyles = _React$useContext.activeStyles,\n        hoverStyles = _React$useContext.hoverStyles;\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\")),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  };\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  };\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200')\n  };\n\n  const getSizeStyle = size => {\n    var styles;\n\n    switch (size) {\n      case 'xs':\n        styles = {\n          px: 2,\n          fontSize: 'xs'\n        };\n        break;\n\n      case 'sm':\n        styles = {\n          px: 3,\n          py: 1,\n          fontSize: 'sm'\n        };\n        break;\n\n      case 'md':\n        styles = {\n          px: 4,\n          py: 1,\n          fontSize: 'md'\n        };\n        break;\n\n      case 'lg':\n        styles = {\n          px: 5,\n          py: 2,\n          fontSize: 'lg'\n        };\n        break;\n    }\n\n    return styles;\n  };\n\n  const sizeStyle = getSizeStyle(size);\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed',\n    userSelect: 'none'\n  };\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, sizeStyle), baseStyle), hoverStyle), props.active && activeStyle), props.disabled && disabledStyle);\n};\n\nconst PagButton = props => {\n  const paginationStyles = usePaginationStyles(props);\n  return /*#__PURE__*/React.createElement(chakra.span, Object.assign({\n    onClick: props.onClick,\n    mx: 1\n  }, paginationStyles), props.children);\n};\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst fetchPageNumbers = () => {\n  const props = React.useContext(PaginationContext);\n  const totalPages = Math.ceil(props.total / props.pageSize);\n  const currentPage = props.current;\n  const pageNeighbours = props.pageNeighbours;\n  const totalNumbers = pageNeighbours * 2 + 3;\n  const totalBlocks = totalNumbers + 2;\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours);\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n    let pages = range(startPage, endPage);\n    const hasLeftSpill = startPage > 2;\n    const hasRightSpill = totalPages - endPage > 1;\n    const spillOffset = totalNumbers - (pages.length + 1);\n\n    switch (true) {\n      case hasLeftSpill && !hasRightSpill:\n        {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n      case !hasLeftSpill && hasRightSpill:\n        {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n      case hasLeftSpill && hasRightSpill:\n      default:\n        {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n    }\n\n    return [1, ...pages, totalPages];\n  }\n\n  return range(1, totalPages);\n};\n\nconst PaginationComp = () => {\n  const props = React.useContext(PaginationContext);\n  const totalPages = Math.ceil(props.total / props.pageSize);\n  const prevRender = props.itemRender(props.current, 'prev');\n  const nextRender = props.itemRender(props.current, 'next');\n  const leftRender = props.itemRender(props.current, 'left');\n  const rightRender = props.itemRender(props.current, 'right');\n  if (!totalPages || totalPages === 1) return null;\n  const pages = fetchPageNumbers();\n\n  const _React$useState = React.useState(props.current),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        uncCurrent = _React$useState2[0],\n        setUncCurrent = _React$useState2[1];\n\n  React.useEffect(() => {\n    console.log('uncCurrent', uncCurrent);\n  });\n\n  const changePage = page => {\n    props.onChange(page);\n    setUncCurrent(page);\n  };\n\n  return props.total > 0 && /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(PagButton, {\n    disabled: props.current === 1 || props.disabled\n  }, prevRender || '◀'), pages.map((page, index) => {\n    if (page === 'LEFT') return /*#__PURE__*/React.createElement(PagButton, {\n      key: index,\n      disabled: props.current === 1 || props.disabled\n    }, leftRender || '<<');\n    if (page === 'RIGHT') return /*#__PURE__*/React.createElement(PagButton, {\n      key: index,\n      disabled: props.current === totalPages || props.disabled\n    }, rightRender || '>>');\n    return /*#__PURE__*/React.createElement(PagButton, {\n      disabled: props.disabled,\n      active: page === props.current,\n      key: \"page-\".concat(page),\n      onClick: () => changePage(page)\n    }, page);\n  }), /*#__PURE__*/React.createElement(PagButton, {\n    disabled: props.current === totalPages || props.disabled\n  }, nextRender || '▶️'));\n};\n\nconst methods = ['itemRender'];\nconst nonMethods = Object.keys(defaultData).filter(k => !methods.includes(k));\n\nconst filterProps = props => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt]);\n    return acc;\n  }, []);\n  return React.useMemo(() => props, validProps);\n};\n\nconst Pagination = props => {\n  const globalProps = filterProps(props);\n  const defaultProps = React.useContext(PaginationContext);\n  const current = globalProps.current || globalProps.defaultCurrent || defaultProps.defaultCurrent;\n  const pageSize = globalProps.pageSize || globalProps.defaultPageSize || defaultProps.defaultPageSize;\n\n  const contextvalue = _objectSpread(_objectSpread(_objectSpread({}, defaultProps), globalProps), {}, {\n    current,\n    pageSize\n  });\n\n  return /*#__PURE__*/React.createElement(PaginationContext.Provider, {\n    value: contextvalue\n  }, /*#__PURE__*/React.createElement(PaginationComp, null));\n};\n\nexport { Pagination };","map":{"version":3,"sources":["../src/providers/pagination-provider.js","../src/services/styles.js","../src/components/pbutton.js","../src/services/fetch-page.js","../src/components/pagination.js","../src/services/filter-props.js","../src/index.js"],"names":["defaultData","current","defaultCurrent","defaultPage","defaultPageSize","disabled","hideOnSinglePage","itemRender","pageSize","pageNeighbours","pageSizeOptions","responsive","showLessItems","showQuickJumper","showSizeChanger","showTitle","showTotal","simple","total","onChange","size","rounded","baseStyles","activeStyles","hoverStyles","colorScheme","PaginationContext","usePaginationStyles","props","React","activeStyle","bg","useColorModeValue","color","cursor","hoverStyle","_hover","baseStyle","getSizeStyle","styles","px","fontSize","py","sizeStyle","disabledStyle","opacity","userSelect","PagButton","paginationStyles","LEFT_PAGE","RIGHT_PAGE","range","step","i","fetchPageNumbers","totalPages","Math","currentPage","totalNumbers","totalBlocks","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","PaginationComp","prevRender","nextRender","leftRender","rightRender","console","changePage","page","setUncCurrent","methods","nonMethods","Object","k","filterProps","validProps","acc","Pagination","globalProps","defaultProps","contextvalue","PagContext"],"mappings":"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","sourcesContent":["import React from 'react'\n\nexport const defaultData = {\n  current: null,\n  defaultCurrent: 1,\n  defaultPage: 1,\n  defaultPageSize: 10,\n  disabled: false,\n  hideOnSinglePage: false,\n  itemRender: () => null,\n  pageSize: null,\n  pageNeighbours: 0, // indicates the number of additional page numbers to show on each side of the current page.\n  pageSizeOptions: [10, 20, 50, 100],\n  responsive: null,\n  showLessItems: false,\n  showQuickJumper: false,\n  showSizeChanger: null,\n  showTitle: true,\n  showTotal: null,\n  simple: null,\n  total: 0,\n  onChange: () => null,\n  size: 'md',\n  rounded: 'md',\n  baseStyles: null,\n  activeStyles: null,\n  hoverStyles: null,\n  colorScheme: 'green'\n}\nconst PaginationContext = React.createContext({\n  ...defaultData\n})\n\nexport default PaginationContext\n","import React from 'react'\n\nimport { useColorModeValue } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\n\nexport const usePaginationStyles = (props) => {\n  const {\n    colorScheme,\n    rounded,\n    size,\n    baseStyles,\n    activeStyles,\n    hoverStyles\n  } = React.useContext(PagContext)\n\n  const activeStyle = activeStyles || {\n    bg: useColorModeValue(`${colorScheme}.600`, `${colorScheme}.500`),\n    color: useColorModeValue('white', 'gray.200'),\n    cursor: 'pointer'\n  }\n\n  const hoverStyle = !props.disabled && {\n    _hover: hoverStyles || activeStyle\n  }\n  const baseStyle = baseStyles || {\n    rounded: rounded,\n    bg: useColorModeValue('white', 'gray.800'),\n    color: useColorModeValue('gray.700', 'gray.200')\n  }\n  const getSizeStyle = (size) => {\n    var styles\n    switch (size) {\n      case 'xs':\n        styles = { px: 2, fontSize: 'xs' }\n        break\n\n      case 'sm':\n        styles = { px: 3, py: 1, fontSize: 'sm' }\n        break\n\n      case 'md':\n        styles = { px: 4, py: 1, fontSize: 'md' }\n        break\n\n      case 'lg':\n        styles = { px: 5, py: 2, fontSize: 'lg' }\n        break\n\n      default:\n        break\n    }\n    return styles\n  }\n  const sizeStyle = getSizeStyle(size)\n  const disabledStyle = {\n    opacity: 0.6,\n    cursor: 'not-allowed',\n    userSelect: 'none'\n  }\n  return {\n    ...sizeStyle,\n    ...baseStyle,\n    ...hoverStyle,\n    ...(props.active && activeStyle),\n    ...(props.disabled && disabledStyle)\n  }\n}\n","import React from 'react'\n\nimport { chakra } from '@chakra-ui/react'\nimport { usePaginationStyles } from '../services/styles'\nexport const PagButton = (props) => {\n  const paginationStyles = usePaginationStyles(props)\n  return (\n    <chakra.span onClick={props.onClick} mx={1} {...paginationStyles}>\n      {props.children}\n    </chakra.span>\n  )\n}\n","import React from 'react'\nimport PagContext from '../providers/pagination-provider'\n\nconst LEFT_PAGE = 'LEFT'\n\nconst RIGHT_PAGE = 'RIGHT'\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from\n  const range = []\n\n  while (i <= to) {\n    range.push(i)\n    i += step\n  }\n\n  return range\n}\n\nexport const fetchPageNumbers = () => {\n  const props = React.useContext(PagContext)\n  const totalPages = Math.ceil(props.total / props.pageSize)\n  const currentPage = props.current\n  const pageNeighbours = props.pageNeighbours\n\n  /**\n   * totalNumbers: the total page numbers to show on the control\n   * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n   */\n  const totalNumbers = pageNeighbours * 2 + 3\n  const totalBlocks = totalNumbers + 2\n\n  if (totalPages > totalBlocks) {\n    const startPage = Math.max(2, currentPage - pageNeighbours)\n    const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours)\n    let pages = range(startPage, endPage)\n\n    /**\n     * hasLeftSpill: has hidden pages to the left\n     * hasRightSpill: has hidden pages to the right\n     * spillOffset: number of hidden pages either to the left or to the right\n     */\n    const hasLeftSpill = startPage > 2\n    const hasRightSpill = totalPages - endPage > 1\n    const spillOffset = totalNumbers - (pages.length + 1)\n\n    switch (true) {\n      // handle: (1) < {5 6} [7] {8 9} (10)\n      case hasLeftSpill && !hasRightSpill: {\n        const extraPages = range(startPage - spillOffset, startPage - 1)\n        pages = [LEFT_PAGE, ...extraPages, ...pages]\n        break\n      }\n\n      // handle: (1) {2 3} [4] {5 6} > (10)\n      case !hasLeftSpill && hasRightSpill: {\n        const extraPages = range(endPage + 1, endPage + spillOffset)\n        pages = [...pages, ...extraPages, RIGHT_PAGE]\n        break\n      }\n\n      // handle: (1) < {4 5} [6] {7 8} > (10)\n      case hasLeftSpill && hasRightSpill:\n      default: {\n        pages = [LEFT_PAGE, ...pages, RIGHT_PAGE]\n        break\n      }\n    }\n\n    return [1, ...pages, totalPages]\n  }\n\n  return range(1, totalPages)\n}\n","import React from 'react'\nimport { PagButton } from './pbutton'\nimport { Flex } from '@chakra-ui/react'\nimport PagContext from '../providers/pagination-provider'\nimport { fetchPageNumbers } from '../services/fetch-page'\n\nexport const PaginationComp = () => {\n  const props = React.useContext(PagContext)\n\n  const totalPages = Math.ceil(props.total / props.pageSize)\n\n  const prevRender = props.itemRender(props.current, 'prev')\n  const nextRender = props.itemRender(props.current, 'next')\n  const leftRender = props.itemRender(props.current, 'left')\n  const rightRender = props.itemRender(props.current, 'right')\n\n  if (!totalPages || totalPages === 1) return null\n\n  const pages = fetchPageNumbers()\n  const [uncCurrent, setUncCurrent] = React.useState(props.current)\n  React.useEffect(() => {\n    console.log('uncCurrent', uncCurrent)\n  })\n\n  const changePage = (page) => {\n    props.onChange(page)\n    setUncCurrent(page)\n  }\n  return (\n    props.total > 0 && (\n      <Flex>\n        <PagButton disabled={props.current === 1 || props.disabled}>\n          {prevRender || '◀'}\n        </PagButton>\n        {pages.map((page, index) => {\n          if (page === 'LEFT')\n            return (\n              <PagButton\n                key={index}\n                disabled={props.current === 1 || props.disabled}\n              >\n                {leftRender || '<<'}\n              </PagButton>\n            )\n\n          if (page === 'RIGHT')\n            return (\n              <PagButton\n                key={index}\n                disabled={props.current === totalPages || props.disabled}\n              >\n                {rightRender || '>>'}\n              </PagButton>\n            )\n\n          return (\n            <PagButton\n              disabled={props.disabled}\n              active={page === props.current}\n              key={`page-${page}`}\n              onClick={() => changePage(page)}\n            >\n              {page}\n            </PagButton>\n          )\n        })}\n        <PagButton disabled={props.current === totalPages || props.disabled}>\n          {nextRender || '▶️'}\n        </PagButton>\n      </Flex>\n    )\n  )\n}\n","import React from 'react'\nimport { defaultData } from '../providers/pagination-provider'\n\nconst methods = ['itemRender']\nconst nonMethods = Object.keys(defaultData).filter((k) => !methods.includes(k))\n\nexport const filterProps = (props) => {\n  const validProps = nonMethods.reduce((acc, nxt) => {\n    acc.push(props[nxt])\n    return acc\n  }, [])\n  return React.useMemo(() => props, validProps)\n}\n","import React from 'react'\n\nimport PagContext from './providers/pagination-provider'\nimport { PaginationComp } from './components/pagination'\n\nimport { filterProps } from './services/filter-props'\nexport const Pagination = (props) => {\n  const globalProps = filterProps(props)\n  const defaultProps = React.useContext(PagContext)\n  const current =\n    globalProps.current ||\n    globalProps.defaultCurrent ||\n    defaultProps.defaultCurrent\n  const pageSize =\n    globalProps.pageSize ||\n    globalProps.defaultPageSize ||\n    defaultProps.defaultPageSize\n\n  const contextvalue = { ...defaultProps, ...globalProps, current, pageSize }\n  return (\n    <PagContext.Provider value={contextvalue}>\n      <PaginationComp />\n    </PagContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}